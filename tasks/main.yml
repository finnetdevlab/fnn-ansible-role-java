---
- name: include os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family|lower }}/{{ ansible_distribution|lower }}/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family|lower }}/{{ ansible_distribution|lower }}/{{ ansible_distribution|lower }}.yml"
    - "{{ ansible_os_family|lower }}/{{ ansible_distribution|lower }}.yml"
    - "{{ ansible_os_family|lower }}/{{ ansible_os_family|lower }}.yml"
  tags: [ include ]

- name: ensure available_packages is defined for os
  fail:
    msg: >
        Available java packages is not defined!
        Probably the os you are trying to install java on is not supported by this role
        right now. Please ensure that os distribution is defined in vars/ folder.
  when: available_packages is not defined

- name: ensure selected java package is available for os
  fail:
    msg: >
        Java package is not available!
        Probably the os you are trying to install java on is not support {{ java_env }}
        {{ java_ver }} package right now. Please ensure that the package you want to install
        is available for this os distribution.
  when: "java_env ~ java_ver not in available_packages"

- name: install java {{ java_env }} {{ java_ver }}
  package:
    name: "{{ available_packages[java_env ~ java_ver] }}"
    state: present
  tags: packages

- name: find java home directory
  shell: >
    set -o pipefail && \
    java -XshowSettings:properties -version 2>&1 > /dev/null | \
    grep 'java.home' | \
    cut -d'=' -f2 | \
    sed -e 's/^[[:space:]]*//'
  args:
    executable: /bin/bash
  register: java_result
  changed_when: False

- name: link java_home if defined
  file:
    dest: "{{ java_home }}"
    src: "{{ java_result.stdout }}"
    state: link
  when: java_home is defined

- name: set java_home variable if not defined
  set_fact:
    java_home: "{{ java_result.stdout }}"
  when: java_home is not defined

- name: set java_home environment variable to /etc/profile
  lineinfile:
    path: /etc/profile
    regexp: '^export JAVA_HOME='
    line: "export JAVA_HOME={{ java_home }}"
  when: not java_result.failed